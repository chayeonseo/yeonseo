<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeonseo.mapper.ProjectMapper">

    <resultMap id="get_project" type="projectDTO" autoMapping="true">
        <id property="id" column="projectId"/>

        <association property="thumbImage" javaType="ProjectDetailDTO">
            <id property="detail" column="thumbImage"/>
        </association>

        <association property="category" javaType="CategoryDTO">
            <id property="id" column="CategoryId"/>
            <result property="name" column="categoryName" />
        </association>

        <association property="createUser" javaType="UserDTO" autoMapping="true">
            <id property="id" column="createUserId"/>
            <result  property="name" column="createUserName" />
        </association>


        <collection property="details" ofType="ProjectDetailDTO" javaType="list">
            <id property="no" column="no"/>
            <result property="detail" column="detail"/>
            <result property="order" column="order"/>
        </collection>

        <collection property="members" ofType="UserDTO" javaType="list" autoMapping="true">
            <id property="id" column="memberUserId"/>
            <result  property="name" column="memberUserName" />
        </collection>
    </resultMap>

    <resultMap id="insert_project" type="projectDTO" autoMapping="true">

    </resultMap>

    <select id="get_project" resultMap="get_project">
        SELECT *,
            P.id AS projectId, C.name AS categoryName,
            U.id AS createUserId, U.name AS createUserName,
            MU.id AS memberUserId, MU.name AS memberUserName,
            D.no AS detailNo, C.id AS categoryId
        FROM project P
            inner join category C
            on P.category_id = C.id
            inner join user U
            on P.create_user = U.id
            left outer join details D
            on P.id = D.project_id
            left outer join member M
            on P.id = M.project_id
            left outer join user MU
            on MU.id = M.user_id
        where p.id = #{projectId}
        order by D.order;
    </select>

    <insert id="like_project" >
        INSERT INTO `liked_product` (`project_id`, `user_id`)
        VALUES (#{project_id}, #{user_id});
    </insert>

    <insert id="insert_project" parameterType="com.yeonseo.dto.ProjectDTO">
        INSERT INTO `gather`.`project`
        (`title`, `category_id`, `thumbImage`, `goal`, `summary`, `price`, `delivery`, `status`, `startDate`, `endDate`)
        VALUES
        (#{title}, #{category.id}, #{thumbImage.detail}, #{goal}, #{summary}, #{price}, #{delivery}, #{status}, #{startDate}, #{endDate}) ;
    </insert>

    <insert id="insert_project_details" parameterType="com.yeonseo.dto.ProjectDetailDTO">
        <selectKey resultType="int" order="BEFORE" keyProperty="projectId">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO `details` VALUES
        (NULL, #{projectId}, #{detail} , #{order},  #{type})
    </insert>

</mapper>