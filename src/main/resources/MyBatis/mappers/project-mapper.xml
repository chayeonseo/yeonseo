<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeonseo.mapper.ProjectMapper">

    <resultMap id="get_project" type="projectDTO" autoMapping="true">
        <id property="id" column="projectId"/>

        <association property="category" javaType="CategoryDTO">
            <id property="id" column="CategoryId"/>
            <result property="name" column="categoryName" />
        </association>

        <association property="createUser" javaType="UserDTO" autoMapping="true">
            <id property="id" column="createUserId"/>
            <result  property="name" column="createUserName" />
        </association>


        <collection property="details" ofType="ProjectDetailDTO" javaType="list">
            <id property="no" column="no"/>
            <result property="detail" column="detail"/>
            <result property="order" column="order"/>
            <result property="type" column="type"/>
        </collection>

        <collection property="members" ofType="UserDTO" javaType="list" autoMapping="true">
            <id property="id" column="memberUserId"/>
            <result  property="name" column="memberUserName" />
        </collection>
    </resultMap>

    <resultMap id="view_home" type="ProjectDTO" autoMapping="true">
        <id property="id" column="p_id" />
        <association property="category" javaType="CategoryDTO" autoMapping="true">
            <id property="id" column="c_id"/>
        </association>
        <collection property="members" ofType="MemberDTO" javaType="list" autoMapping="true">
            <id property="userId" column="m_user_id" />
        </collection>
    </resultMap>

    <select id="get_project" resultMap="get_project">
        SELECT *,
            P.id AS projectId, C.name AS categoryName,
            U.id AS createUserId, U.name AS createUserName,
            D.no AS detailNo, C.id AS categoryId,
            (SELECT count(*) FROM gather.member
        where project_id = #{projectId}) AS count
        FROM project P
            inner join category C
            on P.category_id = C.id
            inner join user U
            on P.create_user = U.id
            left outer join details D
            on P.id = D.project_id
        where p.id = #{projectId}
        order by D.order;
    </select>

    <insert id="like_project" >
        INSERT INTO `liked_product` (`project_id`, `user_id`)
        VALUES (#{project_id}, #{user_id});
    </insert>

    <insert id="insert_project" parameterType="com.yeonseo.dto.ProjectDTO">
        INSERT INTO `gather`.`project`
        (`title`, `category_id`, `thumbImage`, `goal`, `summary`, `price`, `delivery`, `status`, `startDate`, `endDate`)
        VALUES
        (#{title}, #{category.id}, #{thumbImage}, #{goal}, #{summary}, #{price}, #{delivery}, #{status}, #{startDate}, #{endDate}) ;
    </insert>

    <insert id="insert_project_details">
        <selectKey resultType="int" order="BEFORE" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO `details` VALUES
        <foreach collection="details" item="projectDetail" separator=",">
            (NULL, #{id}, #{projectDetail.detail} , #{projectDetail.order},  #{projectDetail.type})
        </foreach>
    </insert>

    <select id="view_home" resultMap="view_home">
        SELECT *, p.id as p_id, c.id as c_id, m.user_id as m_user_id
        FROM project p
        inner join category c
        on p.category_id = c.id
        left outer join `member` m
        on p.id = m.project_id;
    </select>




</mapper>